/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-06-09 16:41:44 UTC)
 * on 2014-07-01 at 02:46:04 UTC 
 * Modify at your own risk.
 */

package com.fortmin.proshopping.shopping;

/**
 * Service definition for Shopping (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ShoppingRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Shopping extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the shopping library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myapp.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "shopping/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Shopping(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Shopping(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "deletecomercio".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Deletecomercio#execute()} method to invoke the remote operation.
   *
   * @param comercio
   * @return the request
   */
  public Deletecomercio deletecomercio(java.lang.String comercio) throws java.io.IOException {
    Deletecomercio result = new Deletecomercio(comercio);
    initialize(result);
    return result;
  }

  public class Deletecomercio extends ShoppingRequest<com.fortmin.proshopping.shopping.model.Comercio> {

    private static final String REST_PATH = "comercio/{comercio}";

    /**
     * Create a request for the method "deletecomercio".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Deletecomercio#execute()} method to invoke the remote
     * operation. <p> {@link Deletecomercio#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param comercio
     * @since 1.13
     */
    protected Deletecomercio(java.lang.String comercio) {
      super(Shopping.this, "DELETE", REST_PATH, null, com.fortmin.proshopping.shopping.model.Comercio.class);
      this.comercio = com.google.api.client.util.Preconditions.checkNotNull(comercio, "Required parameter comercio must be specified.");
    }

    @Override
    public Deletecomercio setAlt(java.lang.String alt) {
      return (Deletecomercio) super.setAlt(alt);
    }

    @Override
    public Deletecomercio setFields(java.lang.String fields) {
      return (Deletecomercio) super.setFields(fields);
    }

    @Override
    public Deletecomercio setKey(java.lang.String key) {
      return (Deletecomercio) super.setKey(key);
    }

    @Override
    public Deletecomercio setOauthToken(java.lang.String oauthToken) {
      return (Deletecomercio) super.setOauthToken(oauthToken);
    }

    @Override
    public Deletecomercio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Deletecomercio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Deletecomercio setQuotaUser(java.lang.String quotaUser) {
      return (Deletecomercio) super.setQuotaUser(quotaUser);
    }

    @Override
    public Deletecomercio setUserIp(java.lang.String userIp) {
      return (Deletecomercio) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String comercio;

    /**

     */
    public java.lang.String getComercio() {
      return comercio;
    }

    public Deletecomercio setComercio(java.lang.String comercio) {
      this.comercio = comercio;
      return this;
    }

    @Override
    public Deletecomercio set(String parameterName, Object value) {
      return (Deletecomercio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteproducto".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Deleteproducto#execute()} method to invoke the remote operation.
   *
   * @param comercio
   * @param paquete
   * @param producto
   * @return the request
   */
  public Deleteproducto deleteproducto(java.lang.String comercio, java.lang.String paquete, java.lang.String producto) throws java.io.IOException {
    Deleteproducto result = new Deleteproducto(comercio, paquete, producto);
    initialize(result);
    return result;
  }

  public class Deleteproducto extends ShoppingRequest<Void> {

    private static final String REST_PATH = "producto/{comercio}/{paquete}/{producto}";

    /**
     * Create a request for the method "deleteproducto".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Deleteproducto#execute()} method to invoke the remote
     * operation. <p> {@link Deleteproducto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param comercio
     * @param paquete
     * @param producto
     * @since 1.13
     */
    protected Deleteproducto(java.lang.String comercio, java.lang.String paquete, java.lang.String producto) {
      super(Shopping.this, "DELETE", REST_PATH, null, Void.class);
      this.comercio = com.google.api.client.util.Preconditions.checkNotNull(comercio, "Required parameter comercio must be specified.");
      this.paquete = com.google.api.client.util.Preconditions.checkNotNull(paquete, "Required parameter paquete must be specified.");
      this.producto = com.google.api.client.util.Preconditions.checkNotNull(producto, "Required parameter producto must be specified.");
    }

    @Override
    public Deleteproducto setAlt(java.lang.String alt) {
      return (Deleteproducto) super.setAlt(alt);
    }

    @Override
    public Deleteproducto setFields(java.lang.String fields) {
      return (Deleteproducto) super.setFields(fields);
    }

    @Override
    public Deleteproducto setKey(java.lang.String key) {
      return (Deleteproducto) super.setKey(key);
    }

    @Override
    public Deleteproducto setOauthToken(java.lang.String oauthToken) {
      return (Deleteproducto) super.setOauthToken(oauthToken);
    }

    @Override
    public Deleteproducto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Deleteproducto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Deleteproducto setQuotaUser(java.lang.String quotaUser) {
      return (Deleteproducto) super.setQuotaUser(quotaUser);
    }

    @Override
    public Deleteproducto setUserIp(java.lang.String userIp) {
      return (Deleteproducto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String comercio;

    /**

     */
    public java.lang.String getComercio() {
      return comercio;
    }

    public Deleteproducto setComercio(java.lang.String comercio) {
      this.comercio = comercio;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String paquete;

    /**

     */
    public java.lang.String getPaquete() {
      return paquete;
    }

    public Deleteproducto setPaquete(java.lang.String paquete) {
      this.paquete = paquete;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String producto;

    /**

     */
    public java.lang.String getProducto() {
      return producto;
    }

    public Deleteproducto setProducto(java.lang.String producto) {
      this.producto = producto;
      return this;
    }

    @Override
    public Deleteproducto set(String parameterName, Object value) {
      return (Deleteproducto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteubicacion".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Deleteubicacion#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.fortmin.proshopping.shopping.model.Ubicacion}
   * @return the request
   */
  public Deleteubicacion deleteubicacion(com.fortmin.proshopping.shopping.model.Ubicacion content) throws java.io.IOException {
    Deleteubicacion result = new Deleteubicacion(content);
    initialize(result);
    return result;
  }

  public class Deleteubicacion extends ShoppingRequest<Void> {

    private static final String REST_PATH = "ubicacion";

    /**
     * Create a request for the method "deleteubicacion".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Deleteubicacion#execute()} method to invoke the remote
     * operation. <p> {@link Deleteubicacion#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.fortmin.proshopping.shopping.model.Ubicacion}
     * @since 1.13
     */
    protected Deleteubicacion(com.fortmin.proshopping.shopping.model.Ubicacion content) {
      super(Shopping.this, "DELETE", REST_PATH, content, Void.class);
    }

    @Override
    public Deleteubicacion setAlt(java.lang.String alt) {
      return (Deleteubicacion) super.setAlt(alt);
    }

    @Override
    public Deleteubicacion setFields(java.lang.String fields) {
      return (Deleteubicacion) super.setFields(fields);
    }

    @Override
    public Deleteubicacion setKey(java.lang.String key) {
      return (Deleteubicacion) super.setKey(key);
    }

    @Override
    public Deleteubicacion setOauthToken(java.lang.String oauthToken) {
      return (Deleteubicacion) super.setOauthToken(oauthToken);
    }

    @Override
    public Deleteubicacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Deleteubicacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Deleteubicacion setQuotaUser(java.lang.String quotaUser) {
      return (Deleteubicacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public Deleteubicacion setUserIp(java.lang.String userIp) {
      return (Deleteubicacion) super.setUserIp(userIp);
    }

    @Override
    public Deleteubicacion set(String parameterName, Object value) {
      return (Deleteubicacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertcomercio".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Insertcomercio#execute()} method to invoke the remote operation.
   *
   * @param comercio
   * @param ubicacion
   * @return the request
   */
  public Insertcomercio insertcomercio(java.lang.String comercio, java.lang.String ubicacion) throws java.io.IOException {
    Insertcomercio result = new Insertcomercio(comercio, ubicacion);
    initialize(result);
    return result;
  }

  public class Insertcomercio extends ShoppingRequest<com.fortmin.proshopping.shopping.model.Comercio> {

    private static final String REST_PATH = "comercio/{comercio}/{ubicacion}";

    /**
     * Create a request for the method "insertcomercio".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Insertcomercio#execute()} method to invoke the remote
     * operation. <p> {@link Insertcomercio#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param comercio
     * @param ubicacion
     * @since 1.13
     */
    protected Insertcomercio(java.lang.String comercio, java.lang.String ubicacion) {
      super(Shopping.this, "POST", REST_PATH, null, com.fortmin.proshopping.shopping.model.Comercio.class);
      this.comercio = com.google.api.client.util.Preconditions.checkNotNull(comercio, "Required parameter comercio must be specified.");
      this.ubicacion = com.google.api.client.util.Preconditions.checkNotNull(ubicacion, "Required parameter ubicacion must be specified.");
    }

    @Override
    public Insertcomercio setAlt(java.lang.String alt) {
      return (Insertcomercio) super.setAlt(alt);
    }

    @Override
    public Insertcomercio setFields(java.lang.String fields) {
      return (Insertcomercio) super.setFields(fields);
    }

    @Override
    public Insertcomercio setKey(java.lang.String key) {
      return (Insertcomercio) super.setKey(key);
    }

    @Override
    public Insertcomercio setOauthToken(java.lang.String oauthToken) {
      return (Insertcomercio) super.setOauthToken(oauthToken);
    }

    @Override
    public Insertcomercio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Insertcomercio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Insertcomercio setQuotaUser(java.lang.String quotaUser) {
      return (Insertcomercio) super.setQuotaUser(quotaUser);
    }

    @Override
    public Insertcomercio setUserIp(java.lang.String userIp) {
      return (Insertcomercio) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String comercio;

    /**

     */
    public java.lang.String getComercio() {
      return comercio;
    }

    public Insertcomercio setComercio(java.lang.String comercio) {
      this.comercio = comercio;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String ubicacion;

    /**

     */
    public java.lang.String getUbicacion() {
      return ubicacion;
    }

    public Insertcomercio setUbicacion(java.lang.String ubicacion) {
      this.ubicacion = ubicacion;
      return this;
    }

    @Override
    public Insertcomercio set(String parameterName, Object value) {
      return (Insertcomercio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertproducto".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Insertproducto#execute()} method to invoke the remote operation.
   *
   * @param comercio
   * @param paquete
   * @param content the {@link com.fortmin.proshopping.shopping.model.Producto}
   * @return the request
   */
  public Insertproducto insertproducto(java.lang.String comercio, java.lang.String paquete, com.fortmin.proshopping.shopping.model.Producto content) throws java.io.IOException {
    Insertproducto result = new Insertproducto(comercio, paquete, content);
    initialize(result);
    return result;
  }

  public class Insertproducto extends ShoppingRequest<Void> {

    private static final String REST_PATH = "void/{comercio}/{paquete}";

    /**
     * Create a request for the method "insertproducto".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Insertproducto#execute()} method to invoke the remote
     * operation. <p> {@link Insertproducto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param comercio
     * @param paquete
     * @param content the {@link com.fortmin.proshopping.shopping.model.Producto}
     * @since 1.13
     */
    protected Insertproducto(java.lang.String comercio, java.lang.String paquete, com.fortmin.proshopping.shopping.model.Producto content) {
      super(Shopping.this, "POST", REST_PATH, content, Void.class);
      this.comercio = com.google.api.client.util.Preconditions.checkNotNull(comercio, "Required parameter comercio must be specified.");
      this.paquete = com.google.api.client.util.Preconditions.checkNotNull(paquete, "Required parameter paquete must be specified.");
    }

    @Override
    public Insertproducto setAlt(java.lang.String alt) {
      return (Insertproducto) super.setAlt(alt);
    }

    @Override
    public Insertproducto setFields(java.lang.String fields) {
      return (Insertproducto) super.setFields(fields);
    }

    @Override
    public Insertproducto setKey(java.lang.String key) {
      return (Insertproducto) super.setKey(key);
    }

    @Override
    public Insertproducto setOauthToken(java.lang.String oauthToken) {
      return (Insertproducto) super.setOauthToken(oauthToken);
    }

    @Override
    public Insertproducto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Insertproducto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Insertproducto setQuotaUser(java.lang.String quotaUser) {
      return (Insertproducto) super.setQuotaUser(quotaUser);
    }

    @Override
    public Insertproducto setUserIp(java.lang.String userIp) {
      return (Insertproducto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String comercio;

    /**

     */
    public java.lang.String getComercio() {
      return comercio;
    }

    public Insertproducto setComercio(java.lang.String comercio) {
      this.comercio = comercio;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String paquete;

    /**

     */
    public java.lang.String getPaquete() {
      return paquete;
    }

    public Insertproducto setPaquete(java.lang.String paquete) {
      this.paquete = paquete;
      return this;
    }

    @Override
    public Insertproducto set(String parameterName, Object value) {
      return (Insertproducto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertubicacion".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Insertubicacion#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.fortmin.proshopping.shopping.model.Ubicacion}
   * @return the request
   */
  public Insertubicacion insertubicacion(com.fortmin.proshopping.shopping.model.Ubicacion content) throws java.io.IOException {
    Insertubicacion result = new Insertubicacion(content);
    initialize(result);
    return result;
  }

  public class Insertubicacion extends ShoppingRequest<com.fortmin.proshopping.shopping.model.Ubicacion> {

    private static final String REST_PATH = "ubicacion";

    /**
     * Create a request for the method "insertubicacion".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Insertubicacion#execute()} method to invoke the remote
     * operation. <p> {@link Insertubicacion#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.fortmin.proshopping.shopping.model.Ubicacion}
     * @since 1.13
     */
    protected Insertubicacion(com.fortmin.proshopping.shopping.model.Ubicacion content) {
      super(Shopping.this, "POST", REST_PATH, content, com.fortmin.proshopping.shopping.model.Ubicacion.class);
    }

    @Override
    public Insertubicacion setAlt(java.lang.String alt) {
      return (Insertubicacion) super.setAlt(alt);
    }

    @Override
    public Insertubicacion setFields(java.lang.String fields) {
      return (Insertubicacion) super.setFields(fields);
    }

    @Override
    public Insertubicacion setKey(java.lang.String key) {
      return (Insertubicacion) super.setKey(key);
    }

    @Override
    public Insertubicacion setOauthToken(java.lang.String oauthToken) {
      return (Insertubicacion) super.setOauthToken(oauthToken);
    }

    @Override
    public Insertubicacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Insertubicacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Insertubicacion setQuotaUser(java.lang.String quotaUser) {
      return (Insertubicacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public Insertubicacion setUserIp(java.lang.String userIp) {
      return (Insertubicacion) super.setUserIp(userIp);
    }

    @Override
    public Insertubicacion set(String parameterName, Object value) {
      return (Insertubicacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatecomercio".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Updatecomercio#execute()} method to invoke the remote operation.
   *
   * @param comercio
   * @param ubicacion
   * @return the request
   */
  public Updatecomercio updatecomercio(java.lang.String comercio, java.lang.String ubicacion) throws java.io.IOException {
    Updatecomercio result = new Updatecomercio(comercio, ubicacion);
    initialize(result);
    return result;
  }

  public class Updatecomercio extends ShoppingRequest<com.fortmin.proshopping.shopping.model.Comercio> {

    private static final String REST_PATH = "comercio/{comercio}/{ubicacion}";

    /**
     * Create a request for the method "updatecomercio".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Updatecomercio#execute()} method to invoke the remote
     * operation. <p> {@link Updatecomercio#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param comercio
     * @param ubicacion
     * @since 1.13
     */
    protected Updatecomercio(java.lang.String comercio, java.lang.String ubicacion) {
      super(Shopping.this, "PUT", REST_PATH, null, com.fortmin.proshopping.shopping.model.Comercio.class);
      this.comercio = com.google.api.client.util.Preconditions.checkNotNull(comercio, "Required parameter comercio must be specified.");
      this.ubicacion = com.google.api.client.util.Preconditions.checkNotNull(ubicacion, "Required parameter ubicacion must be specified.");
    }

    @Override
    public Updatecomercio setAlt(java.lang.String alt) {
      return (Updatecomercio) super.setAlt(alt);
    }

    @Override
    public Updatecomercio setFields(java.lang.String fields) {
      return (Updatecomercio) super.setFields(fields);
    }

    @Override
    public Updatecomercio setKey(java.lang.String key) {
      return (Updatecomercio) super.setKey(key);
    }

    @Override
    public Updatecomercio setOauthToken(java.lang.String oauthToken) {
      return (Updatecomercio) super.setOauthToken(oauthToken);
    }

    @Override
    public Updatecomercio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Updatecomercio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Updatecomercio setQuotaUser(java.lang.String quotaUser) {
      return (Updatecomercio) super.setQuotaUser(quotaUser);
    }

    @Override
    public Updatecomercio setUserIp(java.lang.String userIp) {
      return (Updatecomercio) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String comercio;

    /**

     */
    public java.lang.String getComercio() {
      return comercio;
    }

    public Updatecomercio setComercio(java.lang.String comercio) {
      this.comercio = comercio;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String ubicacion;

    /**

     */
    public java.lang.String getUbicacion() {
      return ubicacion;
    }

    public Updatecomercio setUbicacion(java.lang.String ubicacion) {
      this.ubicacion = ubicacion;
      return this;
    }

    @Override
    public Updatecomercio set(String parameterName, Object value) {
      return (Updatecomercio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateubicacion".
   *
   * This request holds the parameters needed by the the shopping server.  After setting any optional
   * parameters, call the {@link Updateubicacion#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.fortmin.proshopping.shopping.model.Ubicacion}
   * @return the request
   */
  public Updateubicacion updateubicacion(com.fortmin.proshopping.shopping.model.Ubicacion content) throws java.io.IOException {
    Updateubicacion result = new Updateubicacion(content);
    initialize(result);
    return result;
  }

  public class Updateubicacion extends ShoppingRequest<com.fortmin.proshopping.shopping.model.Ubicacion> {

    private static final String REST_PATH = "ubicacion";

    /**
     * Create a request for the method "updateubicacion".
     *
     * This request holds the parameters needed by the the shopping server.  After setting any
     * optional parameters, call the {@link Updateubicacion#execute()} method to invoke the remote
     * operation. <p> {@link Updateubicacion#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.fortmin.proshopping.shopping.model.Ubicacion}
     * @since 1.13
     */
    protected Updateubicacion(com.fortmin.proshopping.shopping.model.Ubicacion content) {
      super(Shopping.this, "PUT", REST_PATH, content, com.fortmin.proshopping.shopping.model.Ubicacion.class);
    }

    @Override
    public Updateubicacion setAlt(java.lang.String alt) {
      return (Updateubicacion) super.setAlt(alt);
    }

    @Override
    public Updateubicacion setFields(java.lang.String fields) {
      return (Updateubicacion) super.setFields(fields);
    }

    @Override
    public Updateubicacion setKey(java.lang.String key) {
      return (Updateubicacion) super.setKey(key);
    }

    @Override
    public Updateubicacion setOauthToken(java.lang.String oauthToken) {
      return (Updateubicacion) super.setOauthToken(oauthToken);
    }

    @Override
    public Updateubicacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Updateubicacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Updateubicacion setQuotaUser(java.lang.String quotaUser) {
      return (Updateubicacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public Updateubicacion setUserIp(java.lang.String userIp) {
      return (Updateubicacion) super.setUserIp(userIp);
    }

    @Override
    public Updateubicacion set(String parameterName, Object value) {
      return (Updateubicacion) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Shopping}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Shopping}. */
    @Override
    public Shopping build() {
      return new Shopping(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ShoppingRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setShoppingRequestInitializer(
        ShoppingRequestInitializer shoppingRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(shoppingRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
